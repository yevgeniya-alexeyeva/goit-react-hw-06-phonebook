{"version":3,"sources":["components/Contact/Contact.module.css","components/Filter/Filter.module.css","components/ContactList/ContactList.module.css","redux/actions.js","redux/reducers.js","redux/store.js","components/Form/Form.jsx","components/Contact/Contact.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","App.js","index.js","components/Form/Form.module.css"],"names":["module","exports","actions","saveNewContact","createAction","name","number","payload","id","shortid","generate","removeContact","changeFilter","items","createReducer","state","filter","_","contactsReducer","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","contactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","devTools","process","persistor","persistStore","Form","getContactData","e","setState","target","value","props","contacts","addContact","preventDefault","some","item","alert","currentTarget","reset","className","form","onSubmit","label","input","onInput","this","type","pattern","title","required","button","Component","connect","dispatch","Contact","onDelete","contactItem","onClick","getFilteredContacts","normalizedFilter","toLowerCase","trim","isNaN","includes","contactList","contactId","itemList","map","filterWrapper","filterLabel","htmlFor","App","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.c77b3ac4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Contact_button__1HhM8\",\"contactItem\":\"Contact_contactItem__2Hh_-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterWrapper\":\"Filter_filterWrapper__1WTej\",\"filterLabel\":\"Filter_filterLabel__1HtR3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemList\":\"ContactList_itemList__2gAvt\"};","import { createAction } from \"@reduxjs/toolkit\";\r\nimport shortid from \"shortid\";\r\n\r\nconst saveNewContact = createAction(\"addContact\", (name, number) => ({\r\n  payload: {\r\n    id: shortid.generate(),\r\n    name: name,\r\n    number: number,\r\n  },\r\n}));\r\n\r\nconst removeContact = createAction(\"removeContact\");\r\n\r\nconst changeFilter = createAction(\"changeFilter\");\r\n\r\nexport const actions = { saveNewContact, removeContact, changeFilter };\r\n","import { createReducer } from \"@reduxjs/toolkit\";\r\nimport { combineReducers } from \"redux\";\r\nimport { actions } from \"./actions\";\r\n\r\nconst testContacts = [\r\n  { id: \"id-1\", name: \"Rosie Simpson\", number: \"4591256\" },\r\n  { id: \"id-2\", name: \"Hermione Kline\", number: \"4438912\" },\r\n  { id: \"id-3\", name: \"Eden Clements\", number: \"6451779\" },\r\n  { id: \"id-4\", name: \"Annie Copeland\", number: \"2279126\" },\r\n];\r\n\r\nconst items = createReducer(testContacts, {\r\n  [actions.saveNewContact]: (state, { payload }) => [...state, payload],\r\n  [actions.removeContact]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer(\"\", {\r\n  [actions.changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst contactsReducer = combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n\r\nexport default contactsReducer;\r\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport logger from \"redux-logger\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport contactsReducer from \"./reducers\";\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nconst contactsPersistConfig = {\r\n  key: \"contacts\",\r\n  storage,\r\n  blacklist: [\"filter\"],\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: persistReducer(contactsPersistConfig, contactsReducer),\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n\r\nexport default store;\r\n","import PropTypes from \"prop-types\";\r\nimport { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { actions } from \"../../redux/actions\";\r\nimport { form, label, input, button } from \"./Form.module.css\";\r\n\r\nclass Form extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n  getContactData = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  saveNewContact = (e, name, number) => {\r\n    const { contacts, addContact } = this.props;\r\n\r\n    e.preventDefault();\r\n    contacts.some((item) => item.name === name)\r\n      ? alert(`${name} is already in contacts`)\r\n      : addContact(name, number);\r\n\r\n    e.currentTarget.reset();\r\n  };\r\n\r\n  static propTypes = {\r\n    addContact: PropTypes.func.isRequired,\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form\r\n        className={form}\r\n        onSubmit={(e) =>\r\n          this.saveNewContact(e, this.state.name, this.state.number)\r\n        }\r\n      >\r\n        <label className={label}>\r\n          Name\r\n          <input\r\n            className={input}\r\n            onInput={this.getContactData}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n          />\r\n        </label>\r\n        <label className={label}>\r\n          Number\r\n          <input\r\n            className={input}\r\n            onInput={this.getContactData}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять из цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n          />\r\n        </label>\r\n\r\n        <button className={button} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ items }) => ({\r\n  contacts: items,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  addContact: (name, number) => dispatch(actions.saveNewContact(name, number)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);\r\n","import PropTypes from \"prop-types\";\r\nimport { button, contactItem } from \"./Contact.module.css\";\r\n\r\nconst Contact = (props) => {\r\n  const { item, onDelete } = props;\r\n  return (\r\n    <li className={contactItem}>\r\n      <span>\r\n        {item.name}: {item.number}\r\n      </span>\r\n      <button\r\n        className={button}\r\n        type=\"button\"\r\n        onClick={() => onDelete(item.id)}\r\n      >\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nContact.propTypes = {\r\n  item: PropTypes.object.isRequired,\r\n  onDelete: PropTypes.func,\r\n};\r\n\r\nexport default Contact;\r\n","import { connect } from \"react-redux\";\r\nimport { actions } from \"../../redux/actions\";\r\nimport Contact from \"../Contact\";\r\nimport PropTypes from \"prop-types\";\r\nimport { itemList } from \"./ContactList.module.css\";\r\n\r\nconst ContactList = (props) => {\r\n  const { contactList, onDelete } = props;\r\n  return (\r\n    <ul className={itemList}>\r\n      {contactList.map((item) => {\r\n        return <Contact item={item} key={item.id} onDelete={onDelete} />;\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contactList: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  onDelete: PropTypes.func.isRequired,\r\n};\r\n\r\nconst getFilteredContacts = (items, filter) => {\r\n  if (!filter) return items;\r\n  const normalizedFilter = filter.toLowerCase().trim();\r\n  return isNaN(normalizedFilter)\r\n    ? items.filter((item) => item.name.toLowerCase().includes(normalizedFilter))\r\n    : items.filter((item) => item.number.includes(normalizedFilter));\r\n};\r\n\r\nconst mapStateToProps = ({ items, filter }) => {\r\n  return {\r\n    contactList: getFilteredContacts(items, filter),\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onDelete: (contactId) => dispatch(actions.removeContact(contactId)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import { connect } from \"react-redux\";\r\nimport { actions } from \"../../redux/actions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { filterWrapper, filterLabel } from \"./Filter.module.css\";\r\n\r\nconst Filter = (props) => {\r\n  const { value, changeFilter } = props;\r\n  return (\r\n    <div className={filterWrapper}>\r\n      <label className={filterLabel} htmlFor=\"filter\">\r\n        Find contacts by name or number\r\n      </label>\r\n      <input\r\n        id=\"filter\"\r\n        onInput={(e) => changeFilter(e.target.value)}\r\n        value={value}\r\n        type=\"text\"\r\n      ></input>\r\n    </div>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  changeFilter: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = ({ filter }) => ({ value: filter });\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  changeFilter: (value) => dispatch(actions.changeFilter(value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import \"./App.css\";\nimport Form from \"./components/Form\";\nimport ContactList from \"./components/ContactList\";\nimport Filter from \"./components/Filter\";\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <h1>Phonebook</h1>\n      <Form />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store, { persistor } from \"./redux/store\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__3lx02\",\"label\":\"Form_label__4WKJB\",\"input\":\"Form_input__2NiTw\",\"button\":\"Form_button__1U1_E\"};"],"sourceRoot":""}