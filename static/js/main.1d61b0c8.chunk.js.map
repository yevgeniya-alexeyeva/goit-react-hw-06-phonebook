{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactList/ContactList.module.css","components/Form/Form.module.css","redux/types.js","redux/reducers.js","redux/store.js","redux/actions.js","components/Form/Form.jsx","components/Contact/Contact.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","App.js","index.js","components/Contact/Contact.module.css"],"names":["module","exports","types","ADD_CONTACT","REMOVE_CONTACT","CHANGE_FILTER","testContacts","id","name","number","contactsReducer","combineReducers","items","state","type","payload","filter","store","createStore","composeWithDevTools","actions","shortid","generate","contactId","value","Form","getContactData","e","setState","target","saveNewContact","props","contacts","addContact","preventDefault","some","item","alert","currentTarget","reset","className","form","onSubmit","label","input","onInput","this","pattern","title","required","button","Component","connect","dispatch","Contact","onDelete","contactItem","onClick","getFilteredContacts","normalizedFilter","toLowerCase","trim","isNaN","includes","contactList","itemList","map","changeFilter","filterWrapper","filterLabel","htmlFor","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1d61b0c8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterWrapper\":\"Filter_filterWrapper__1WTej\",\"filterLabel\":\"Filter_filterLabel__1HtR3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemList\":\"ContactList_itemList__2gAvt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__3lx02\",\"label\":\"Form_label__4WKJB\",\"input\":\"Form_input__2NiTw\",\"button\":\"Form_button__1U1_E\"};","const types = {\r\n  ADD_CONTACT: \"add_contact\",\r\n  REMOVE_CONTACT: \"remove_contact\",\r\n  CHANGE_FILTER: \"change_filter\",\r\n};\r\n\r\nexport default types;\r\n","import types from \"./types\";\r\nimport { combineReducers } from \"redux\";\r\n\r\nconst testContacts = [\r\n  { id: \"id-1\", name: \"Rosie Simpson\", number: \"4591256\" },\r\n  { id: \"id-2\", name: \"Hermione Kline\", number: \"4438912\" },\r\n  { id: \"id-3\", name: \"Eden Clements\", number: \"6451779\" },\r\n  { id: \"id-4\", name: \"Annie Copeland\", number: \"2279126\" },\r\n];\r\n\r\nconst items = (state = testContacts, { type, payload }) => {\r\n  switch (type) {\r\n    case types.ADD_CONTACT:\r\n      return [...state, payload];\r\n\r\n    case types.REMOVE_CONTACT:\r\n      return state.filter(({ id }) => id !== payload);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst filter = (state = \"\", { type, payload }) => {\r\n  switch (type) {\r\n    case types.CHANGE_FILTER:\r\n      return payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst contactsReducer = combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n\r\nexport default contactsReducer;\r\n","import { createStore } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport contactsReducer from \"./reducers\";\r\n\r\nconst store = createStore(contactsReducer, composeWithDevTools());\r\n\r\nexport default store;\r\n","import shortid from \"shortid\";\r\nimport types from \"./types\";\r\n\r\nconst saveNewContact = (name, number) => ({\r\n  type: types.ADD_CONTACT,\r\n  payload: {\r\n    id: shortid.generate(),\r\n    name: name,\r\n    number: number,\r\n  },\r\n});\r\n\r\nconst removeContact = (contactId) => ({\r\n  type: types.REMOVE_CONTACT,\r\n  payload: contactId,\r\n});\r\n\r\nconst changeFilter = (value) => ({\r\n  type: types.CHANGE_FILTER,\r\n  payload: value,\r\n});\r\n\r\nexport const actions = { saveNewContact, removeContact, changeFilter };\r\n","import PropTypes from \"prop-types\";\r\nimport { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { actions } from \"../../redux/actions\";\r\nimport { form, label, input, button } from \"./Form.module.css\";\r\n\r\nclass Form extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n  getContactData = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  saveNewContact = (e, name, number) => {\r\n    const { contacts, addContact } = this.props;\r\n\r\n    e.preventDefault();\r\n    contacts.some((item) => item.name === name)\r\n      ? alert(`${name} is already in contacts`)\r\n      : addContact(name, number);\r\n\r\n    e.currentTarget.reset();\r\n  };\r\n\r\n  static propTypes = {\r\n    addContact: PropTypes.func.isRequired,\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form\r\n        className={form}\r\n        onSubmit={(e) =>\r\n          this.saveNewContact(e, this.state.name, this.state.number)\r\n        }\r\n      >\r\n        <label className={label}>\r\n          Name\r\n          <input\r\n            className={input}\r\n            onInput={this.getContactData}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n          />\r\n        </label>\r\n        <label className={label}>\r\n          Number\r\n          <input\r\n            className={input}\r\n            onInput={this.getContactData}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять из цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n          />\r\n        </label>\r\n\r\n        <button className={button} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ items }) => ({\r\n  contacts: items,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  addContact: (name, number) => dispatch(actions.saveNewContact(name, number)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);\r\n","import PropTypes from \"prop-types\";\r\nimport { button, contactItem } from \"./Contact.module.css\";\r\n\r\nconst Contact = (props) => {\r\n  const { item, onDelete } = props;\r\n  return (\r\n    <li className={contactItem}>\r\n      <span>\r\n        {item.name}: {item.number}\r\n      </span>\r\n      <button\r\n        className={button}\r\n        type=\"button\"\r\n        onClick={() => onDelete(item.id)}\r\n      >\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nContact.propTypes = {\r\n  item: PropTypes.object.isRequired,\r\n  onDelete: PropTypes.func,\r\n};\r\n\r\nexport default Contact;\r\n","import { connect } from \"react-redux\";\r\nimport { actions } from \"../../redux/actions\";\r\nimport Contact from \"../Contact\";\r\nimport PropTypes from \"prop-types\";\r\nimport { itemList } from \"./ContactList.module.css\";\r\n\r\nconst ContactList = (props) => {\r\n  const { contactList, onDelete } = props;\r\n  return (\r\n    <ul className={itemList}>\r\n      {contactList.map((item) => {\r\n        return <Contact item={item} key={item.id} onDelete={onDelete} />;\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contactList: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  onDelete: PropTypes.func.isRequired,\r\n};\r\n\r\nconst getFilteredContacts = (items, filter) => {\r\n  if (!filter) return items;\r\n  const normalizedFilter = filter.toLowerCase().trim();\r\n  return isNaN(normalizedFilter)\r\n    ? items.filter((item) => item.name.toLowerCase().includes(normalizedFilter))\r\n    : items.filter((item) => item.number.includes(normalizedFilter));\r\n};\r\n\r\nconst mapStateToProps = ({ items, filter }) => {\r\n  return {\r\n    contactList: getFilteredContacts(items, filter),\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onDelete: (contactId) => dispatch(actions.removeContact(contactId)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import { connect } from \"react-redux\";\r\nimport { actions } from \"../../redux/actions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { filterWrapper, filterLabel } from \"./Filter.module.css\";\r\n\r\nconst Filter = (props) => {\r\n  const { value, changeFilter } = props;\r\n  return (\r\n    <div className={filterWrapper}>\r\n      <label className={filterLabel} htmlFor=\"filter\">\r\n        Find contacts by name or number\r\n      </label>\r\n      <input\r\n        id=\"filter\"\r\n        onInput={(e) => changeFilter(e.target.value)}\r\n        value={value}\r\n        type=\"text\"\r\n      ></input>\r\n    </div>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  changeFilter: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = ({ filter }) => ({ value: filter });\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  changeFilter: (value) => dispatch(actions.changeFilter(value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import \"./App.css\";\nimport Form from \"./components/Form\";\nimport ContactList from \"./components/ContactList\";\nimport Filter from \"./components/Filter\";\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <h1>Phonebook</h1>\n      <Form />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Contact_button__1HhM8\",\"contactItem\":\"Contact_contactItem__2Hh_-\"};"],"sourceRoot":""}