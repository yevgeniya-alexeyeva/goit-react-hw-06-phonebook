{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactList/ContactList.module.css","components/Form/Form.module.css","redux/types.js","redux/reducers.js","redux/store.js","redux/actions.js","components/Form/Form.jsx","components/Contact/Contact.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","App.js","index.js","components/Contact/Contact.module.css"],"names":["module","exports","types","ADD_CONTACT","REMOVE_CONTACT","CHANGE_FILTER","testContacts","id","name","number","contactsReducer","combineReducers","items","state","type","payload","filter","store","createStore","composeWithDevTools","actions","shortid","generate","contactId","value","Form","getContactData","e","setState","target","className","form","onSubmit","props","label","input","onInput","this","pattern","title","required","button","Component","Contact","item","onDelete","contactItem","onClick","ContactList","contactList","itemList","map","Filter","filterWrapper","filterLabel","htmlFor","getFilteredContacts","normalizedFilter","toLowerCase","trim","isNaN","includes","connect","contacts","dispatch","addContact","changeFilter","preventDefault","some","alert","currentTarget","reset","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5045ed6b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterWrapper\":\"Filter_filterWrapper__1WTej\",\"filterLabel\":\"Filter_filterLabel__1HtR3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemList\":\"ContactList_itemList__2gAvt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__3lx02\",\"label\":\"Form_label__4WKJB\",\"input\":\"Form_input__2NiTw\",\"button\":\"Form_button__1U1_E\"};","const types = {\r\n  ADD_CONTACT: \"add_contact\",\r\n  REMOVE_CONTACT: \"remove_contact\",\r\n  CHANGE_FILTER: \"change_filter\",\r\n};\r\n\r\nexport default types;\r\n","import types from \"./types\";\r\nimport { combineReducers } from \"redux\";\r\n\r\nconst testContacts = [\r\n  { id: \"id-1\", name: \"Rosie Simpson\", number: \"4591256\" },\r\n  { id: \"id-2\", name: \"Hermione Kline\", number: \"4438912\" },\r\n  { id: \"id-3\", name: \"Eden Clements\", number: \"6451779\" },\r\n  { id: \"id-4\", name: \"Annie Copeland\", number: \"2279126\" },\r\n];\r\n\r\nconst items = (state = testContacts, { type, payload }) => {\r\n  switch (type) {\r\n    case types.ADD_CONTACT:\r\n      return [...state, payload];\r\n\r\n    case types.REMOVE_CONTACT:\r\n      return state.filter(({ id }) => id !== payload);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst filter = (state = \"\", { type, payload }) => {\r\n  switch (type) {\r\n    case types.CHANGE_FILTER:\r\n      return payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst contactsReducer = combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n\r\nexport default contactsReducer;\r\n","import { createStore } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport contactsReducer from \"./reducers\";\r\n\r\nconst store = createStore(contactsReducer, composeWithDevTools());\r\n\r\nexport default store;\r\n","import shortid from \"shortid\";\r\nimport types from \"./types\";\r\n\r\nconst saveNewContact = (name, number) => ({\r\n  type: types.ADD_CONTACT,\r\n  payload: {\r\n    id: shortid.generate(),\r\n    name: name,\r\n    number: number,\r\n  },\r\n});\r\n\r\nconst removeContact = (contactId) => ({\r\n  type: types.REMOVE_CONTACT,\r\n  payload: contactId,\r\n});\r\n\r\nconst changeFilter = (value) => ({\r\n  type: types.CHANGE_FILTER,\r\n  payload: value,\r\n});\r\n\r\nexport const actions = { saveNewContact, removeContact, changeFilter };\r\n","import PropTypes from \"prop-types\";\r\nimport { Component } from \"react\";\r\nimport { form, label, input, button } from \"./Form.module.css\";\r\n\r\nclass Form extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n  getContactData = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  static propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form\r\n        className={form}\r\n        onSubmit={(e) =>\r\n          this.props.onSubmit(e, this.state.name, this.state.number)\r\n        }\r\n      >\r\n        <label className={label}>\r\n          Name\r\n          <input\r\n            className={input}\r\n            onInput={this.getContactData}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n          />\r\n        </label>\r\n        <label className={label}>\r\n          Number\r\n          <input\r\n            className={input}\r\n            onInput={this.getContactData}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять из цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n          />\r\n        </label>\r\n\r\n        <button className={button} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;\r\n","import PropTypes from \"prop-types\";\r\nimport { button, contactItem } from \"./Contact.module.css\";\r\n\r\nconst Contact = (props) => {\r\n  const { item, onDelete } = props;\r\n  return (\r\n    <li className={contactItem}>\r\n      <span>\r\n        {item.name}: {item.number}\r\n      </span>\r\n      <button\r\n        className={button}\r\n        type=\"button\"\r\n        onClick={() => onDelete(item.id)}\r\n      >\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nContact.propTypes = {\r\n  item: PropTypes.object.isRequired,\r\n  onDelete: PropTypes.func,\r\n};\r\n\r\nexport default Contact;\r\n","import Contact from \"../Contact\";\r\nimport PropTypes from \"prop-types\";\r\nimport { itemList } from \"./ContactList.module.css\";\r\n\r\nconst ContactList = (props) => {\r\n  const { contactList, onDelete } = props;\r\n  return (\r\n    <ul className={itemList}>\r\n      {contactList.map((item) => {\r\n        return <Contact item={item} key={item.id} onDelete={onDelete} />;\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contactList: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  onDelete: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import PropTypes from \"prop-types\";\r\nimport { filterWrapper, filterLabel } from \"./Filter.module.css\";\r\n\r\nconst Filter = (props) => {\r\n  const { onInput } = props;\r\n  return (\r\n    <div className={filterWrapper}>\r\n      <label className={filterLabel} htmlFor=\"filter\">\r\n        Find contacts by name or number\r\n      </label>\r\n      <input\r\n        id=\"filter\"\r\n        onInput={(e) => onInput(e.target.value)}\r\n        type=\"text\"\r\n      ></input>\r\n    </div>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  onInput: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import { connect } from \"react-redux\";\nimport \"./App.css\";\nimport { actions } from \"./redux/actions\";\nimport Form from \"./components/Form\";\nimport ContactList from \"./components/ContactList\";\nimport Filter from \"./components/Filter\";\nimport PropTypes from \"prop-types\";\n\nconst App = ({ contacts, addContact, onDelete, changeFilter }) => {\n  const saveNewContact = (e, name, number) => {\n    e.preventDefault();\n    contacts.some((item) => item.name === name)\n      ? alert(`${name} is already in contacts`)\n      : addContact(name, number);\n\n    e.currentTarget.reset();\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Phonebook</h1>\n      <Form onSubmit={saveNewContact} />\n      <h2>Contacts</h2>\n      <Filter onInput={changeFilter} />\n      <ContactList contactList={contacts} onDelete={onDelete} />\n    </div>\n  );\n};\n\nconst getFilteredContacts = (items, filter) => {\n  if (!filter) return items;\n  const normalizedFilter = filter.toLowerCase().trim();\n  return isNaN(normalizedFilter)\n    ? items.filter((item) => item.name.toLowerCase().includes(normalizedFilter))\n    : items.filter((item) => item.number.includes(normalizedFilter));\n};\n\nconst mapStateToProps = ({ items, filter }) => {\n  return {\n    contacts: getFilteredContacts(items, filter),\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  addContact: (name, number) => dispatch(actions.saveNewContact(name, number)),\n  onDelete: (contactId) => dispatch(actions.removeContact(contactId)),\n  changeFilter: (value) => dispatch(actions.changeFilter(value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n\nApp.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.object).isRequired,\n  filter: PropTypes.string,\n  addContact: PropTypes.func.isRequired,\n  onDelete: PropTypes.func.isRequired,\n  changeFilter: PropTypes.func.isRequired,\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Contact_button__1HhM8\",\"contactItem\":\"Contact_contactItem__2Hh_-\"};"],"sourceRoot":""}